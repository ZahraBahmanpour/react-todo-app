{"version":3,"sources":["logo.svg","components/CreateTask.js","components/TaskItem.js","components/TaskList.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["CreateTask","props","handleChange","event","setState","task","target","value","handleSubmit","preventDefault","createTask","state","onSubmit","this","type","placeholder","onChange","autoFocus","class","Component","TaskItem","setEditingState","isEditing","toggleTask","id","deleteTask","editTask","taskItem","className","onClick","readOnly","checked","isCompleted","TaskList","tasks","map","index","localStorage","getItem","JSON","parse","Main","trim","push","setItem","stringify","alert","taskId","splice","React","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9c306c3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\n\nexport default class CreateTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task: '',\n    };\n  }\n  handleChange = (event) => {\n    this.setState({ task: event.target.value });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.createTask(this.state.task);\n    this.setState({ task: '' });\n  };\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter task\"\n          value={this.state.task}\n          onChange={this.handleChange}\n          autoFocus\n        />\n        <button class=\"add\" type=\"submit\">\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class TaskItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task: this.props.taskItem.task,\n      isEditing: false,\n    };\n  }\n  setEditingState = (isEditing) => {\n    this.setState({ isEditing: isEditing });\n  };\n  toggleTask = () => {\n    this.props.toggleTask(this.props.id);\n  };\n  deleteTask = () => {\n    this.props.deleteTask(this.props.id);\n  };\n  handleChange = (event) => {\n    this.setState({ task: event.target.value });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.editTask(this.props.id, this.state.task);\n    this.setState({ isEditing: false });\n  };\n  render() {\n    return (\n      <tr>\n        {this.state.isEditing ? (\n          <>\n            <td>\n              <form onSubmit={this.handleSubmit}>\n                <input\n                  value={this.state.task}\n                  onChange={this.handleChange}\n                  autoFocus\n                />\n              </form>\n            </td>\n            <td>\n              <button\n                className=\"save\"\n                onClick={this.handleSubmit}\n                type=\"submit\"\n              >\n                Save\n              </button>\n              <button\n                className=\"back\"\n                onClick={() => this.setEditingState(false)}\n                type=\"button\"\n              >\n                Back\n              </button>\n            </td>\n          </>\n        ) : (\n          <>\n            <td className=\"task\" onClick={this.toggleTask}>\n              <input\n                type=\"checkbox\"\n                readOnly\n                checked={this.props.taskItem.isCompleted}\n              />\n              <span\n                className={\n                  this.props.taskItem.isCompleted\n                    ? 'completed'\n                    : 'not-completed'\n                }\n              >\n                {this.props.taskItem.task}\n              </span>\n            </td>\n            <td>\n              <button\n                className=\"edit\"\n                onClick={() => this.setEditingState(true)}\n              >\n                Edit\n              </button>\n              <button className=\"delete\" onClick={this.deleteTask}>\n                Delete\n              </button>\n            </td>\n          </>\n        )}\n      </tr>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport TaskItem from './TaskItem';\n\nexport default class TaskList extends Component {\n  render() {\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th>Task</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.props.tasks.map((task, index) => (\n            <TaskItem\n              key={index}\n              taskItem={task}\n              id={index}\n              deleteTask={this.props.deleteTask}\n              editTask={this.props.editTask}\n              toggleTask={this.props.toggleTask}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n","import React from 'react';\nimport CreateTask from './CreateTask';\nimport TaskList from './TaskList';\n\nconst tasks = localStorage.getItem('tasks')\n  ? JSON.parse(localStorage.getItem('tasks'))\n  : [];\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: tasks,\n    };\n  }\n  createTask = (task) => {\n    if (task.trim() === '') {\n      alert(\"Task can't be empty\");\n      return;\n    }\n    tasks.push({ task, isCompleted: false });\n    this.setState({ tasks: tasks });\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  };\n  toggleTask = (taskId) => {\n    const taskItem = tasks[taskId];\n    taskItem.isCompleted = !taskItem.isCompleted;\n    this.setState({ tasks: tasks });\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  };\n  deleteTask = (taskId) => {\n    tasks.splice(taskId, 1);\n    this.setState({ tasks: tasks });\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  };\n  editTask = (taskId, task) => {\n    const taskItem = tasks[taskId];\n    taskItem.task = task;\n    this.setState({ tasks: tasks });\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  };\n  render() {\n    return (\n      <div className=\"main\">\n        <h1>Todos</h1>\n        <div className=\"content\">\n          <CreateTask createTask={this.createTask} />\n          <br />\n          <TaskList\n            tasks={this.state.tasks}\n            deleteTask={this.deleteTask}\n            editTask={this.editTask}\n            toggleTask={this.toggleTask}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport Main from './components/Main';\n\nfunction App() {\n  return <Main />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}